{"version":3,"sources":["App.js","index.js"],"names":["timerProps","require","isPlaying","size","strokeWidth","renderTime","dimension","time","className","App","stratTime","Date","now","remainingTime","daysDuration","Math","ceil","colors","duration","initialRemainingTime","elapsedTime","onComplete","totalElapsedTime","href","ReactDOM","render","document","getElementById"],"mappings":"+OAYMA,G,wBALUC,EAAQ,IAKL,CACjBC,WAAW,EACXC,KAAM,IACNC,YAAa,IAGTC,EAAa,SAACC,EAAWC,GAC7B,OACE,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,QAAQD,GACvB,6BAAMD,KAoHGG,MAxGf,WAEE,IAAMC,EAAYC,KAAKC,MAAQ,IAGzBC,EAFUH,EAAY,OAEIA,EAE1BI,EA/BW,MA8BJC,KAAKC,KAAKH,EA9BN,OAmCf,OACI,yBAAKL,UAAU,OACX,4BAAQA,UAAU,WACd,oDACA,4CAEJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,WACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,SAAd,aACA,6BACF,yBAAKA,UAAU,SACf,kBAAC,uBAAD,iBACNR,EADM,CAEViB,OAAQ,CAAC,CAAC,YACVC,SAAUJ,EACVK,qBAAsBN,KAErB,gBAAGO,EAAH,EAAGA,YAAH,OACCf,EAAW,QAAoBS,EAAeM,EAAc,KAtDnD,MAoB+B,MAqC5C,kBAAC,uBAAD,iBACMpB,EADN,CAEEiB,OAAQ,CAAC,CAAC,YACVC,SA5DW,MA6DXC,qBAAsBN,EA7DX,MA8DXQ,WAAY,SAAAC,GAAgB,MAAI,CAC9BT,EAAgBS,EAhEN,UAmEX,gBAAGF,EAAH,EAAGA,YAAH,OACCf,EAAW,SAnEF,MAmEqCe,EAAc,KAnEnD,MADC,KAoB+C,MAmD7D,kBAAC,uBAAD,iBACMpB,EADN,CAEEiB,OAAQ,CAAC,CAAC,YACVC,SA1EY,KA2EZC,qBAAsBN,EA3EV,KA4EZQ,WAAY,SAAAC,GAAgB,MAAI,CAC9BT,EAAgBS,EA9EJ,QAiFb,gBAAGF,EAAH,EAAGA,YAAH,OACCf,EACE,WAlFQ,KAmFqBe,EAAc,KAnFnC,KADE,GAoBkD,MAoElE,kBAAC,uBAAD,iBACMpB,EADN,CAEEiB,OAAQ,CAAC,CAAC,YACVC,SA3Fc,GA4FdC,qBAAsBN,EA5FR,GA6FdQ,WAAY,SAAAC,GAAgB,MAAI,CAACT,EAAgBS,EAAmB,OAEnE,gBAAGF,EAAH,EAAGA,YAAH,OACCf,EAAW,UAhGC,GAgGyBe,EA7EQ,IAAQ,OAkF7C,6BACA,yBAAKZ,UAAU,OACb,yBAAKA,UAAU,OAAf,gBAAkC,6BAAlC,aAGA,yBAAKA,UAAU,OAAf,iBACgB,6BADhB,kBAIA,yBAAKA,UAAU,OAAf,oBACmB,6BADnB,QAOJ,yBAAKA,UAAU,WACb,yBAAKA,UAAU,MACb,4BACE,4BAAI,uBAAGe,KAAK,IAAR,eACJ,4BAAI,uBAAGA,KAAK,IAAR,wBC3H1BC,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,eAAe,W","file":"static/js/main.ccdb20e3.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport './App.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nvar Bootstrap = require('react-bootstrap') ;\r\nconst minuteSeconds = 60;\r\nconst hourSeconds = 3600;\r\nconst daySeconds = 86400;\r\n\r\nconst timerProps = {\r\n  isPlaying: true,\r\n  size: 120,\r\n  strokeWidth: 6\r\n};\r\n\r\nconst renderTime = (dimension, time) => {\r\n  return (\r\n    <div className=\"time-wrapper\">\r\n      <div className=\"time\">{time}</div>\r\n      <div>{dimension}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getTimeSeconds = time => (minuteSeconds - time / 1000) | 0;\r\nconst getTimeMinutes = time => ((time % hourSeconds) / minuteSeconds) | 0;\r\nconst getTimeHours = time => ((time % daySeconds) / hourSeconds) | 0;\r\nconst getTimeDays = time => (time / daySeconds) | 0;\r\n\r\n\r\n\r\nfunction App()\r\n{\r\n  const stratTime = Date.now() / 1000; // use UNIX timestamp in seconds\r\n  const endTime = stratTime + 243248; // use UNIX timestamp in seconds\r\n\r\n  const remainingTime = endTime - stratTime;\r\n  const days = Math.ceil(remainingTime / daySeconds);\r\n  const daysDuration = days * daySeconds\r\n    \r\n  \r\n  \r\n    return(\r\n        <div className=\"App\">\r\n            <header className=\"aheader\">\r\n                <h2>XXX Project Overview</h2>\r\n                <h4>Sample page</h4>\r\n            </header>\r\n            <div className=\"box\">\r\n                <div className=\"column1\">\r\n                  <div className=\"shadow-box-example hoverable positioned\">\r\n                    <h4 className=\"ibox2\">Days Left</h4>\r\n                    <hr/>\r\n                  <div className=\"timer\">\r\n                  <CountdownCircleTimer\r\n        {...timerProps}\r\n        colors={[[\"#7E2E84\"]]}\r\n        duration={daysDuration}\r\n        initialRemainingTime={remainingTime}\r\n      >\r\n        {({ elapsedTime }) =>\r\n          renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\r\n        }\r\n      </CountdownCircleTimer>\r\n      <CountdownCircleTimer\r\n        {...timerProps}\r\n        colors={[[\"#D14081\"]]}\r\n        duration={daySeconds}\r\n        initialRemainingTime={remainingTime % daySeconds}\r\n        onComplete={totalElapsedTime => [\r\n          remainingTime - totalElapsedTime > hourSeconds\r\n        ]}\r\n      >\r\n        {({ elapsedTime }) =>\r\n          renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\r\n        }\r\n      </CountdownCircleTimer>\r\n      <CountdownCircleTimer\r\n        {...timerProps}\r\n        colors={[[\"#EF798A\"]]}\r\n        duration={hourSeconds}\r\n        initialRemainingTime={remainingTime % hourSeconds}\r\n        onComplete={totalElapsedTime => [\r\n          remainingTime - totalElapsedTime > minuteSeconds\r\n        ]}\r\n      >\r\n        {({ elapsedTime }) =>\r\n          renderTime(\r\n            \"minutes\",\r\n            getTimeMinutes(hourSeconds - elapsedTime / 1000)\r\n          )\r\n        }\r\n      </CountdownCircleTimer>\r\n      <CountdownCircleTimer\r\n        {...timerProps}\r\n        colors={[[\"#218380\"]]}\r\n        duration={minuteSeconds}\r\n        initialRemainingTime={remainingTime % minuteSeconds}\r\n        onComplete={totalElapsedTime => [remainingTime - totalElapsedTime > 0]}\r\n      >\r\n        {({ elapsedTime }) =>\r\n          renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n        }\r\n      </CountdownCircleTimer>\r\n                    \r\n                  </div>\r\n                  <hr/>\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">Project Owner<br/>\r\n                    Balakumar\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      Project Mentor<br/>\r\n                       Goutham Ramesh\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      Reprts Submitted <br/>5\r\n                    </div>\r\n                   \r\n                   </div>\r\n                   </div>\r\n                </div>\r\n                <div className=\"column2\" >\r\n                  <div className=\"ic\">\r\n                    <ul>\r\n                      <li><a href=\"\">New Report</a></li>\r\n                      <li><a href=\"\">Report Status</a></li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById(\"root\"));\r\n"],"sourceRoot":""}